package com.web.bumble.bee.controller;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.web.bumble.bee.model.Brand;
import com.web.bumble.bee.model.Category;
import com.web.bumble.bee.model.Product;
import com.web.bumble.bee.service.BrandService;
import com.web.bumble.bee.service.CategoryService;
import com.web.bumble.bee.service.ProductService;

public class ProductsController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String action=request.getParameter("action");
		if(action.equals("allbrand")) {
			getAll(request, response);
		}
		
		else if(action.equals("getAllProduct")) {
			
			getAllProduct(request, response);
		}
		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String action=request.getParameter("action");
		
		if(action.equals("addProducts")){
		
			addProduct(request, response);
			
		}else if(action.equals("deleteproducts")) {
			
			delete(request, response);
		}
		else if(action.equals("searchproducts")) {
			searchbyid(request, response);
		}
		}
	
	private void addProduct(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String message="";
		ProductService service=new ProductService();
		Product product=new Product();
		Brand brand=new Brand();
		Category category=new Category();
		product.setProductname(request.getParameter("productname"));
		product.setProdcutdescription(request.getParameter("productdescription"));
		product.setPrice(Double.parseDouble(request.getParameter("price")));
		product.setQuantity(Integer.parseInt(request.getParameter("quantity")));
		brand.setBrandid(Integer.parseInt(request.getParameter("brand")));
		category.setCategoryid(Integer.parseInt(request.getParameter("category")));
		try {
			boolean result=service.addProduct(product, brand, category);
			if(result) {
				
				message="Product Added";
			}
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			message=e.getMessage();
		}
		
		request.setAttribute("message", message);
		RequestDispatcher rd=request.getRequestDispatcher("add-product.jsp");
		rd.forward(request, response);
	}
	
	private void getAll(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String message= "";
		BrandService service=new BrandService();
		CategoryService servicecate=new CategoryService();
		try {
			List<Brand>brand=service.getAllBrand();
			List<Category>category=servicecate.getAllCat();
			if(brand.isEmpty()||category.isEmpty()) {
				
				message="No Product Data";
			}
			
			request.setAttribute("branddata", brand);
			request.setAttribute("category", category);
			
			
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			message=e.getMessage();
		}
		
		request.setAttribute("message",message);
		RequestDispatcher rd=request.getRequestDispatcher("add-product.jsp"); 
		rd.forward(request, response);
		
	}
	
	private void getAllProduct(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String message= "";
		ProductService service=new ProductService();
		
		
		try {
			
			List<Product> productlists=service.gettAllProduct();
			
			
			if(productlists.isEmpty()) {
				message="Empty List";
				
			}
			request.setAttribute("productlist",productlists);
			
		
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			message=e.getMessage();
		}
		request.setAttribute("message",message);
		RequestDispatcher rd=request.getRequestDispatcher("view-product.jsp"); 
		rd.forward(request, response);
	}

	private void delete(HttpServletRequest request, HttpServletResponse response) throws IOException {
		String message= "";
		ProductService service=new ProductService();
		Product  product=new Product();
		product.setProductid(Integer.parseInt(request.getParameter("pid")));
		try {
			boolean Result=service.deleteProduct(product);
			if(Result) {
				message="Product Deleted";
				
			}
		} catch (ClassNotFoundException | SQLException e) {
			message=e.getMessage();
		}
		request.setAttribute("message", message);
		response.sendRedirect("/Bumble/searchProduct?action=getAllProduct");
		//Bumble/searchProduct?action=getAllProduct
	}
	
	private void searchbyid(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException  {
		String message= "";
		ProductService service=new ProductService();
		Product  product=new Product();
		product.setProductid(Integer.parseInt(request.getParameter("pid")));
		try {
			product=service.searchProduct(product);
			if(product==null) {
				
				
			}
			request.setAttribute("product",product);
			
		} catch (ClassNotFoundException | SQLException e) {
			message=e.getMessage();
		}
		request.setAttribute("message",message);
		RequestDispatcher rd=request.getRequestDispatcher("view-one-product.jsp"); 
		rd.forward(request, response);
	}
	
	
	private void updateProduct(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String message="";
		ProductService service=new ProductService();
		Product product=new Product();
		Brand brand=new Brand();
		Category category=new Category();
		product.setProductname(request.getParameter("productname"));
		product.setProdcutdescription(request.getParameter("productdescription"));
		product.setPrice(Double.parseDouble(request.getParameter("price")));
		product.setQuantity(Integer.parseInt(request.getParameter("quantity")));
	
		try {
			boolean result=service.updateProduct(product);
			if(result) {
				
				message="Product updated";
			}
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			message=e.getMessage();
		}
		
		request.setAttribute("message", message);
		RequestDispatcher rd=request.getRequestDispatcher("add-product.jsp");
		rd.forward(request, response);
		
	}

}
